What happens when you initialize a repository? Why do you need to do it?
	When you init a repo, it adds a hidden folder, .git which stores meta 
	data which holds onto different versions of your project when you make
	a commit. You need to do this or else your files won't have a log and 
	the only file you will have access to is the current one.

How can you use the staging area to make sure you have one commit per logical 
change?
	By using git diff to compare it to the last commit, or to see what 
	changes are in this commit in the staging area.

What are some situations where branches would be helpful in keeping your historyorganized? How would branches help?
	In case where you want to add a new feature or try something new.

How do the diagrams help you visualize the branch structure?
	It is easier to see and understand what is actually going on and how 
	different parts are related.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
	A pro is that you can see if any conflict arrises, such as the same
	function having a different number, but a con is that sometimes these
	conflicts are simple and you need to go in yourself and make the change
	so the branches can merge.
